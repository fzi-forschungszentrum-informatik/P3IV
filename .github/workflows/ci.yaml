name: p3iv-CI

on:
  push:
    branches:
      - "**"
    tags:
      - "**"
  # Run tests for any PRs.
  pull_request:

jobs:
  formatting:
    runs-on: ubuntu-20.04
    steps:
      - name: Setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup docker cache
        uses: actions/cache@v3
        with:
          path: /tmp/.docker-cache
          key: ${{runner.os}}-docker-noetic

      - name: Build dependencies
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          tags: p3iv_src
          cache-from: type=local,src=/tmp/.docker-cache
          cache-to: type=local,dest=/tmp/.docker-cache
          load: true
          build-args: |
            DEV=1
            DISTRIBUTION=20.04
            ROS_DISTRO=noetic
            ROS=ros
          target: p3iv_src

      - name: Run clang formatting check
        run: |
          set -ex
          docker run -i --rm p3iv_src find . -name "*.cpp" -o -name "*.h" -execdir clang-format-11 -n -Werror --style=file {} +

      - name: Run black formatting check
        run: |
          set -ex
          docker run -i --rm p3iv_src find ./src/p3iv -name "*.py" -not -name "setup.py" -execdir python3 -m black --check --line-length=120 {} +

  test:
    # needs: formatting
    runs-on: ubuntu-20.04
    # strategy:
    #  fail-fast: true
    steps:
      - name: Setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup docker cache
        uses: actions/cache@v3
        with:
          path: /tmp/.docker-cache
          key: ${{runner.os}}-docker-noetic

      - name: Build dependencies
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          tags: p3iv_base:noetic
          cache-from: type=local,src=/tmp/.docker-cache
          cache-to: type=local,dest=/tmp/.docker-cache
          build-args: |
            DEV=1
            DISTRIBUTION=20.04
            ROS_DISTRO=noetic
            ROS=ros
          target: p3iv_src

      - name: Build P3IV
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          tags: p3iv:noetic
          cache-from: type=local,src=/tmp/.docker-cache
          load: true
          build-args: |
            DEV=1
            DISTRIBUTION=20.04
            ROS_DISTRO=noetic
            ROS=ros
          target: p3iv

      - name: Run P3IV Tests
        run: |
          set -ex;
          export TEST_CMD="catkin build --no-status --catkin-make-args run_tests && source /opt/ros/noetic/setup.bash && catkin run_tests p3iv --verbose";
          docker run -i --name p3iv_test_noetic p3iv:noetic /bin/bash -c "$TEST_CMD";
      - name: Cleanup Docker Container
        run:
          docker rm -f p3iv_test_noetic;
